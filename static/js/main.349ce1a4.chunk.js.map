{"version":3,"sources":["components/Picker.js","components/User.js","components/UserList.js","constants.js","actions/index.js","selectors/index.js","containers/App.js","reducers/index.js","api/index.js","saga/index.js","store/index.js","serviceWorker.js","index.js"],"names":["Picker","_this$props","this","props","value","options","onChange","react_default","a","createElement","className","e","target","map","option","key","Component","User","link","name","avatar","href","rel","src","alt","UserList","users","user","User_User","login","avatar_url","url","SELECT_LANGUAGE","REFRESH_USERS","requestUsers","language","type","receiveUsers","data","items","receivedAt","Date","now","errorUsers","error","getSelectedLanguage","state","getUsersByLanguage","createSelector","usersByLanguage","isUsersFetching","isFetching","getUsersItems","getUsersError","LANGUAGES","App","selectedLanguage","selectLanguage","refreshUsers","Picker_Picker","react_loader_spinner_default","color","height","width","onClick","UserList_UserList","connect","console","log","combineReducers","arguments","length","undefined","action","Object","objectSpread","defineProperty","fetchedAt","NUMBER_OF_PROFILES_TO_DISPLAY","API_TOKEN","apiClient","axios","create","baseURL","getPopularUsersByLanguage","params","q","concat","per_page","access_token","sort","order","get","interceptors","request","use","config","NProgress","start","response","done","fetchUsers","watchSelectLanguage","startup","rootSaga","regenerator_default","wrap","_context","prev","next","put","call","sent","t0","message","stop","_marked","_context3","take","select","fork","_marked3","shouldFetcUsers","keys","_context4","_marked4","_context5","_marked5","_context6","_marked6","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","run","Boolean","location","hostname","match","ReactDOM","render","es","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.349ce1a4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Picker.css\";\n\nexport default class Picker extends Component {\n  render() {\n    const { value, options, onChange } = this.props;\n\n    return (\n      <div className=\"picker\">\n        <select value={value} onChange={(e) => onChange(e.target.value)}>\n          {options.map((option) => (\n            <option value={option} key={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./User.css\";\n\nexport default class User extends Component {\n  render() {\n    const { link, name, avatar } = this.props;\n\n    return (\n      <a href={link} className=\"user\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img className=\"user__avatar\" src={avatar} alt=\"\" />\n        <div className=\"user__info\">\n          <div className=\"user__name\"> {name} </div>\n        </div>\n      </a>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport User from \"./User.js\";\n\nimport \"./UserList.css\";\n\nexport default class UserList extends Component {\n  render() {\n    const { users } = this.props;\n\n    return (\n      <div className=\"user-list\">\n        {users.map((user) => (\n          <User key={user.login} name={user.login} avatar={user.avatar_url} link={user.url} />\n        ))}\n      </div>\n    );\n  }\n}\n","export const SELECT_LANGUAGE = \"SELECT_LANGUAGE\";\nexport const REQUEST_USERS = \"REQUEST_USERS\";\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\nexport const ERROR_USERS = \"ERROR_USERS\";\nexport const REFRESH_USERS = \"REFRESH_USERS\";\n","import {\n  SELECT_LANGUAGE,\n  REQUEST_USERS,\n  RECEIVE_USERS,\n  ERROR_USERS,\n  REFRESH_USERS\n} from \"../constants\";\n\nexport const selectLanguage = (language) => ({\n  type: SELECT_LANGUAGE,\n  language\n});\n\nexport const requestUsers = (language) => ({\n  type: REQUEST_USERS,\n  language\n});\n\nexport const receiveUsers = (language, data) => ({\n  type: RECEIVE_USERS,\n  language,\n  users: data.data.items,\n  receivedAt: Date.now()\n});\n\nexport const errorUsers = (error, language) => ({\n  type: ERROR_USERS,\n  language,\n  error: error\n});\n\nexport const refreshUsers = () => ({\n  type: REFRESH_USERS\n});\n","import { createSelector } from \"reselect\";\n\nexport const getSelectedLanguage = (state) => state.language;\n\nexport const getUsersByLanguage = createSelector(\n  (state) => state.usersByLanguage,\n  getSelectedLanguage,\n  (usersByLanguage, language) => usersByLanguage[language] || {}\n);\n\nexport const isUsersFetching = createSelector(\n  getUsersByLanguage,\n  (users) => users.isFetching\n);\n\nexport const getUsersItems = createSelector(\n  getUsersByLanguage,\n  (users) => users.items || []\n);\n\nexport const getUsersError = createSelector(\n  getUsersByLanguage,\n  (users) => users.error\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport Picker from \"../components/Picker\";\nimport UserList from \"../components/UserList\";\n\nimport { selectLanguage, refreshUsers } from \"../actions\";\nimport { getSelectedLanguage, isUsersFetching, getUsersItems, getUsersError } from \"../selectors\";\n\nimport \"./App.css\";\n\nconst LANGUAGES = [\n  \"javascript\",\n  \"java\",\n  \"python\",\n  \"css\",\n  \"php\",\n  \"c++\",\n  \"c#\",\n  \"c\",\n  \"shell\",\n  \"objective-c\",\n  \"go\",\n  \"perl\"\n];\n\nclass App extends Component {\n  render() {\n    const { users, selectedLanguage, isFetching, error, selectLanguage, refreshUsers } = this.props;\n\n    if (error) {\n      return (\n        <div className=\"app\">\n          <div className=\"app__error\">{error}</div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"app\">\n        <Picker value={selectedLanguage} options={LANGUAGES} onChange={selectLanguage} />\n\n        <div className=\"app__content\">\n          {isFetching ? (\n            <Loader type=\"CradleLoader\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n          ) : (\n            <div>\n              <button onClick={refreshUsers}>Refresh</button>\n              <UserList users={users} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => {\n    console.log(state);\n\n    return {\n      users: getUsersItems(state),\n      isFetching: isUsersFetching(state),\n      error: getUsersError(state),\n      selectedLanguage: getSelectedLanguage(state)\n    };\n  },\n  { selectLanguage, refreshUsers }\n)(App);\n","import { combineReducers } from \"redux\";\nimport { SELECT_LANGUAGE, REQUEST_USERS, RECEIVE_USERS, ERROR_USERS } from \"../constants\";\n\nconst language = (state = \"javascript\", action) => {\n  switch (action.type) {\n    case SELECT_LANGUAGE:\n      return action.language;\n\n    default:\n      return state;\n  }\n};\n\nconst users = (state = { isFetching: false, items: [], fetchedAt: 0, error: null }, action) => {\n  switch (action.type) {\n    case REQUEST_USERS:\n      return {\n        ...state,\n        isFetching: true\n      };\n\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.users,\n        receivedAt: action.receivedAt,\n        error: null\n      };\n\n    case ERROR_USERS:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\n// https://redux.js.org/advanced/async-actions#handling-actions\nconst usersByLanguage = (state = {}, action) => {\n  switch (action.type) {\n    case REQUEST_USERS:\n    case RECEIVE_USERS:\n    case ERROR_USERS:\n      return {\n        ...state,\n        [action.language]: users([action.language], action)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ usersByLanguage, language });\n","import axios from \"axios\";\nimport NProgress from \"nprogress\";\n\nconst API_BASE_URL = \"https://api.github.com\";\nconst NUMBER_OF_PROFILES_TO_DISPLAY = 100;\nconst API_TOKEN = \"fdd83349eaddc6a102419f86dca3743fd1a542d7\";\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL\n});\n\napiClient.interceptors.request.use((config) => {\n  NProgress.start();\n  return config;\n});\n\napiClient.interceptors.response.use((response) => {\n  NProgress.done();\n  return response;\n});\n\nexport function getPopularUsersByLanguage(language) {\n  const params = {\n    q: `language:${language}`,\n    per_page: NUMBER_OF_PROFILES_TO_DISPLAY,\n    access_token: API_TOKEN,\n    sort: \"followers\",\n    order: \"desc\"\n  };\n\n  return apiClient.get(\"/search/users\", { params });\n}\n","import { put, call, fork, select, /* takeLatest, */ take } from \"redux-saga/effects\";\n\nimport { getPopularUsersByLanguage } from \"../api\";\nimport { requestUsers, receiveUsers, errorUsers } from \"../actions\";\nimport { getSelectedLanguage, getUsersByLanguage } from \"../selectors\";\n\nimport { SELECT_LANGUAGE, REFRESH_USERS } from \"../constants\";\n\nexport function* fetchUsers(language) {\n  yield put(requestUsers(language));\n\n  try {\n    const data = yield call(getPopularUsersByLanguage, language);\n    yield put(receiveUsers(language, data));\n  } catch (error) {\n    // yield put(errorUsers(error, language));\n    if (error.response) {\n      yield put(errorUsers(error.response.data.message, language));\n    } else {\n      yield put(errorUsers(error.message, language));\n    }\n  }\n}\n\nexport function* selectLanguage(action) {\n  // console.log(action);\n  yield fork(fetchUsers, action.language);\n}\n\nexport function* refreshUsers() {\n  while (true) {\n    yield take(REFRESH_USERS);\n\n    const language = yield select(getSelectedLanguage);\n\n    yield fork(fetchUsers, language);\n  }\n}\n\n// helper\nconst INVALIDATE_TIME = 60000; // 1 min\nconst shouldFetcUsers = (users) => {\n  // users - это объект, чтобы проверить пустой объект или нет используем Object.keys(users).length, в нашем случае объект не должен быть пустым(тоесть есть данные) и время вышло\n  if (Object.keys(users).length && Date.now() - users.receivedAt < INVALIDATE_TIME) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport function* watchSelectLanguage() {\n  while (true) {\n    yield take(SELECT_LANGUAGE);\n\n    const usersByLanguage = yield select(getUsersByLanguage);\n    const language = yield select(getSelectedLanguage);\n\n    if (!usersByLanguage.items) {\n      yield fork(fetchUsers, language);\n    }\n\n    if (shouldFetcUsers(usersByLanguage)) {\n      yield fork(fetchUsers, language);\n    }\n  }\n}\n\nexport function* startup() {\n  const selectedLanguage = yield select(getSelectedLanguage);\n\n  yield fork(fetchUsers, selectedLanguage);\n}\n\nexport default function* rootSaga() {\n  yield fork(startup);\n  yield fork(watchSelectLanguage);\n  yield fork(refreshUsers);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware, thunk)));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/App\";\n\nimport store from \"./store\";\n\nimport \"modern-normalize\";\nimport \"nprogress/nprogress.css\";\nimport \"./assets/main.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}